authors = [
"Stephane.Carrez@gmail.com",
]
description = "Utility Library with streams, processes, logs, serialization, encoders"
licenses = "Apache-2.0"
long-description = "[![Build Status](https://img.shields.io/endpoint?url=https://porion.vacs.fr/porion/api/v1/projects/ada-util/badges/build.json)](https://porion.vacs.fr/porion/projects/view/ada-util/summary)\n[![Test Status](https://img.shields.io/endpoint?url=https://porion.vacs.fr/porion/api/v1/projects/ada-util/badges/tests.json)](https://porion.vacs.fr/porion/projects/view/ada-util/xunits)\n[![Coverage](https://img.shields.io/endpoint?url=https://porion.vacs.fr/porion/api/v1/projects/ada-util/badges/coverage.json)](https://porion.vacs.fr/porion/projects/view/ada-util/summary)\n[![Documentation Status](https://readthedocs.org/projects/ada-util/badge/?version=latest)](https://ada-util.readthedocs.io/en/latest/?badge=latest)\n\nThis Ada library contains various utility packages for building\nAda applications.  This includes:\n\n* A logging framework close to Java log4j framework,\n* Support for INI and property files,\n* A serialization/deserialization framework for XML, JSON, CSV, Forms\n* Ada beans framework,\n* Encoding/decoding framework (Base16, Base32, Base64, SHA, HMAC-SHA, AES-256),\n* A composing stream framework (raw, files, buffers, pipes, sockets, encryption, decryption, LZMA compression, LZMA decompression),\n* Several concurrency tools (reference counters, counters, pools, fifos, arrays),\n* Process creation and pipes,\n* Support for loading shared libraries (on Windows or Unix),\n* HTTP client library on top of CURL or AWS.\n\n# Documentation\n\n* [Ada Utility Library Programmer's Guide](https://ada-util.readthedocs.io/en/latest/) [PDF](https://github.com/stcarrez/ada-util/blob/master/docs/utilada-book.pdf)\n* [IO stream composition and serialization with Ada Utility Library](https://blog.vacs.fr/vacs/blogs/post.html?post=2022/03/05/IO-stream-composition-and-serialization-with-Ada-Utility-Library)\n* [Easy reading and writing files with Ada Utility Library](https://blog.vacs.fr/vacs/blogs/post.html?post=2020/08/09/Easy-reading-and-writing-files-with-Ada-Utility-Library)\n* [Process creation in Java and Ada](https://blog.vacs.fr/vacs/blogs/post.html?post=2012/03/16/Process-creation-in-Java-and-Ada)\n\n"
maintainers = [
"Stephane.Carrez@gmail.com",
]
maintainers-logins = [
"stcarrez",
]
name = "utilada"
project-files = [
".alire/utilada_conf.gpr",
"utilada_core.gpr",
"utilada_base.gpr",
"utilada_sys.gpr",
]
tags = [
"logging",
"processes",
"streams",
"json",
"beans",
"encoders",
"decoders",
]
version = "2.6.0"
website = "https://gitlab.com/stcarrez/ada-util"
[configuration]
auto_gpr_with = true
disabled = true
generate_ada = true
generate_c = true
generate_gpr = true
output_dir = "config"
[gpr-externals]
UTIL_BUILD = [
"distrib",
"debug",
"optimize",
"profile",
"coverage",
]
UTIL_LIBRARY_TYPE = [
"relocatable",
"static",
"static-pic",
]
UTIL_OS = [
"win32",
"win64",
"linux32",
"linux64",
"macos64",
"netbsd32",
"netbsd64",
"freebsd32",
"freebsd64",
]
[gpr-set-externals]
UTIL_OS = "linux64"

